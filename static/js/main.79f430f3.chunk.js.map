{"version":3,"sources":["goods.js","components/Todo/Todo.jsx","components/Shapes/TodoShape.js","components/Shapes/FilterOfTodosShape.js","components/FilterOfTodos/FilterOfTodos.jsx","components/TodoList/TodoList.jsx","components/Shapes/TodoListShape.js","components/CurrentUser/CurrentUser.jsx","components/Shapes/CurrentUserShape.js","App.jsx","index.js"],"names":["API_URL","getUser","id","fetch","then","response","json","data","Todo","PropTypes","bool","string","isRequired","number","func","completed","title","userId","handleСhangeUserId","type","readOnly","checked","className","classNames","onClick","defaultProps","FilterOfTodosShape","showedTodos","filterText","handleChange","FilterOfTodos","placeholder","name","value","onChange","TodoList","todos","arrayOf","shape","map","key","CurrentUser","state","user","changeUser","a","props","setState","console","warn","this","prevProps","resetUserId","email","phone","React","Component","App","selectedUserId","event","target","getFiltredTodos","filterBy","all","active","filter","todoTitle","toLowerCase","searchText","includes","catch","err","selectUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79f430f3.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-api.herokuapp.com`;\n\nexport function getAll() {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json())\n    .then(json => json.data)\n    .then(todos => todos.filter(({ id, title }) => id && title));\n}\n\nexport function getUser(id) {\n  return fetch(`${API_URL}/users/${id}`)\n    .then(response => response.json())\n    .then(json => json.data);\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { TodoShape } from '../Shapes/TodoShape';\n\nexport const Todo = ({ completed, title, userId, handleСhangeUserId }) => (\n  <>\n    <label>\n      <input\n        type=\"checkbox\"\n        readOnly\n        checked={completed}\n      />\n      <p>{title}</p>\n    </label>\n\n    <button\n      className={\n        classNames(\n          'button',\n          {\n            'TodoList__user-button--selected': completed,\n          },\n        )\n      }\n      type=\"button\"\n      onClick={() => handleСhangeUserId(userId)}\n    >\n      User #\n      {userId}\n    </button>\n  </>\n);\n\nTodo.propTypes = TodoShape;\n\nTodo.defaultProps = {\n  userId: 0,\n  completed: false,\n};\n","import PropTypes from 'prop-types';\n\nexport const TodoShape = {\n  completed: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number,\n  handleСhangeUserId: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const FilterOfTodosShape = {\n  showedTodos: PropTypes.string.isRequired,\n  filterText: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { FilterOfTodosShape } from '../Shapes/FilterOfTodosShape';\n\nexport const FilterOfTodos = ({ filterText, handleChange, showedTodos }) => (\n  <div>\n    <input\n      placeholder=\"Search\"\n      name=\"filterText\"\n      value={filterText}\n      onChange={handleChange}\n    />\n\n    <select\n      name=\"showedTodos\"\n      value={showedTodos}\n      onChange={handleChange}\n    >\n      <option value=\"all\">\n        All\n      </option>\n\n      <option value=\"active\">\n        Active\n      </option>\n\n      <option value=\"completed\">\n        Completed\n      </option>\n    </select>\n  </div>\n);\n\nFilterOfTodos.propTypes = FilterOfTodosShape;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../Todo/Todo';\nimport { FilterOfTodos } from '../FilterOfTodos';\nimport { TodoListShape } from '../Shapes/TodoListShape';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  filterText,\n  handleChange,\n  showedTodos,\n  handleСhangeUserId,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <FilterOfTodos\n      filterText={filterText}\n      handleChange={handleChange}\n      showedTodos={showedTodos}\n    />\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(({ completed, id, title, userId }) => (\n          <li\n            key={id}\n            className={\n              classNames(\n                'TodoList__item',\n                {\n                  'TodoList__item--checked': completed,\n                  'TodoList__item--unchecked': !completed,\n                },\n              )}\n          >\n            <Todo\n              completed={completed}\n              title={title}\n              userId={userId}\n              handleChange={handleChange}\n              handleСhangeUserId={handleСhangeUserId}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = TodoListShape;\n","import PropTypes from 'prop-types';\nimport { FilterOfTodosShape } from './FilterOfTodosShape';\n\nexport const TodoListShape = {\n  ...FilterOfTodosShape,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number,\n      completed: PropTypes.bool,\n      title: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React from 'react';\nimport { getUser } from '../../goods';\nimport './CurrentUser.scss';\nimport { CurrentUserShape } from '../Shapes/CurrentUserShape';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.changeUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { userId } = this.props;\n\n    if (prevProps.userId === userId) {\n      return;\n    }\n\n    this.changeUser();\n  }\n\n  changeUser = async() => {\n    const { userId } = this.props;\n\n    try {\n      const user = await getUser(userId);\n\n      this.setState({\n        user,\n      });\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(error);\n    }\n  }\n\n  render() {\n    const { userId, resetUserId } = this.props;\n    const { name, email, phone } = this.state.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {userId}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear button\"\n          onClick={resetUserId}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = CurrentUserShape;\n","import PropTypes from 'prop-types';\n\nexport const CurrentUserShape = {\n  userId: PropTypes.number.isRequired,\n  resetUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getAll } from './goods';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    filterText: '',\n    showedTodos: 'all',\n  };\n\n  componentDidMount() {\n    getAll()\n      .then((todos) => {\n        this.setState({\n          todos,\n        });\n      })\n      // eslint-disable-next-line no-console\n      .catch(err => console.warn(err));\n  }\n\n  handleСhangeUserId = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  resetUserId = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  getFiltredTodos = () => {\n    const { todos, filterText, showedTodos } = this.state;\n\n    const filterBy = {\n      all: () => true,\n      active: completed => !completed,\n      completed: completed => completed,\n    };\n\n    return todos\n      .filter(({ title, completed }) => {\n        const todoTitle = title.toLowerCase();\n        const searchText = filterText.toLowerCase();\n\n        return todoTitle.includes(searchText)\n          && filterBy[showedTodos](completed);\n      });\n  }\n\n  render() {\n    const { selectedUserId, filterText, showedTodos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={this.getFiltredTodos()}\n            selectUserId={this.selectUserId}\n            filterText={filterText}\n            handleChange={this.handleChange}\n            handleСhangeUserId={this.handleСhangeUserId}\n            showedTodos={showedTodos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {\n              selectedUserId\n                ? (\n                  <CurrentUser\n                    userId={selectedUserId}\n                    resetUserId={this.resetUserId}\n                  />\n                )\n                : 'No user selected'\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}